#version: '3.8'

name: digital_portfolio

networks:
  network:

volumes:
  volume_db:
  volume_files:

services:
  portfolio_server:
    build:
      context: ./Server
      dockerfile: Dockerfile
    restart: always
    container_name: portfolio_server
#    ports:
#      - "8081:8080"
    environment:
      - Jwt:Issuer=${JWT_ISSUER}
      - Jwt:Audience=${JWT_AUDIENCE}
      - Jwt:Key=${JWT_KEY}
      - DB_CONNECTION_STRING=${DB_CONNECTION_STRING}
      - Email=${EMAIL}
      - EmailPassword=${EMAIL_PASSWORD}
    volumes:
      - volume_files:/files
    networks:
      - network
    depends_on:
      - portfolio_db
  portfolio_db:
    image: postgres:latest
    restart: always
    container_name: db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
#    ports:
#      - "8082:5432"
    volumes:
      - volume_db:/var/lib/postgresql/data
    networks:
      - network
  portfolio_frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: dev  # Запуск именно сервера (start) реакт, а не сборка (build). См. докерфайл реакта. Измените на prod в продакшене
    restart: always
    container_name: portfolio_frontend
#    ports:
#      - "8083:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - WATCHPACK_POLLING=true # Обеспечивает работу hot reload
      - WDS_SOCKET_HOST=localhost #Следующие две настройки для работы hot reload
      - WDS_SOCKET_PORT=80 # По умолчанию hot reload подключается к localhost:3000, измените эти переменные, если у вас не так
    # nginx должен быть настроен, чтобы уметь проксировать вебсокеты
    networks:
      - network
    depends_on:
      - portfolio_server
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - ./:/etc/nginx/conf.d
    networks:
      - network
    depends_on:
      - portfolio_server